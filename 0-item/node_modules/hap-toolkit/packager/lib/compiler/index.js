"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.parseFragmentsWithCache=parseFragmentsWithCache,exports.parseTemplate=parseTemplate,exports.parseStyle=parseStyle,exports.parseScript=parseScript;var _parse=_interopRequireDefault(require("parse5")),_template=_interopRequireDefault(require("./template")),_style=_interopRequireDefault(require("./style")),_script=_interopRequireDefault(require("./script")),_utils=require("../common/utils");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _formatFragment(e,t){var r,a,s,n,i={};if(t.__location){var o=t.__location;a=o.startTag&&o.endTag?(r=o.startTag.endOffset||0,o.endTag.startOffset||0):(r=o.startOffset||0,o.endOffset||0),s=o.line,n=o.col}else r=a=s=n=0;return t.attrs&&t.attrs.length&&t.attrs.forEach(function(e){i[e.name]=e.value}),{type:t.nodeName,attrs:i,content:e.substring(r,a),location:{start:r,end:a,line:s,column:n}}}function parseFragments(t){var r={import:[],template:[],style:[],script:[]};return _parse.default.parseFragment(t,{treeAdapter:_parse.default.treeAdapters.default,locationInfo:!0}).childNodes.forEach(function(e){r[e.nodeName]&&r[e.nodeName].push(_formatFragment(t,e))}),r}var fragsCache=new Map;function parseFragmentsWithCache(e,t){return fragsCache.has(t)&&fragsCache.get(t).source===e||fragsCache.set(t,{source:e,frags:parseFragments(e)}),fragsCache.get(t).frags}function parseTemplate(e,t){return new Promise(function(a,s){_template.default.parse(e,t,function(e,t){if(e)s(e);else{var r=(0,_utils.serialize)(t.jsonTemplate,2);a({parsed:r,log:t.log})}})})}function parseStyle(e){return new Promise(function(i,o){_style.default.parse(e,function(e,t){var r=t.jsonStyle,a=t.depList,s=t.log;if(e)o(e);else{var n=JSON.stringify(r,null,2);i({parsed:n,depList:a,log:s})}})})}function parseScript(t){return new Promise(function(e){e({parsed:_script.default.fix(t)})})}